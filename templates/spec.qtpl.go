// This file is automatically generated by qtc from "spec.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line spec.qtpl:1
package templates

//line spec.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line spec.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line spec.qtpl:1
func StreamSpec(qw422016 *qt422016.Writer, specID, url string) {
	//line spec.qtpl:1
	qw422016.N().S(`
<!doctype html>
<html>

<head>
    
</head>

<body>
    <form action="" method="post" id="form">
        <div>
            <label for="spec_id">Spec ID:</label>
            <input type="text" id="spec_id" name="spec_id" value="`)
	//line spec.qtpl:13
	qw422016.E().S(specID)
	//line spec.qtpl:13
	qw422016.N().S(`" />
        </div>
        <div>
            <label for="name">Assignment name:</label>
            <input type="text" id="name" name="assignment_name" value="test"/>
        </div>
        <div>
            <label for="data">Message:</label>
            <textarea id="data" name="data">{"NetID": "jbbaile2"}</textarea>
        </div>
        <button type="submit">Submit</button>
    </form>

    <div id="result"></div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script>
        $("#form").submit(function(event) {
            event.preventDefault();

            var postData = {
                specID: $("#spec_id").val(),
                assignmentName: $("#name").val(),
                data: JSON.parse($("#data").val())
            };

            $.ajax({
                url: '`)
	//line spec.qtpl:41
	qw422016.E().S(url)
	//line spec.qtpl:41
	qw422016.N().S(`',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(postData),
                dataType: 'json',
                success: function(data) {
                    var id = data.instanceID;
                    $("#result").append('<br><a href="/instance/' + id + '" target="_blank">' + id + '</a>');
                }
            });
        });
    </script>
</body>

</html>
`)
//line spec.qtpl:56
}

//line spec.qtpl:56
func WriteSpec(qq422016 qtio422016.Writer, specID, url string) {
	//line spec.qtpl:56
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line spec.qtpl:56
	StreamSpec(qw422016, specID, url)
	//line spec.qtpl:56
	qt422016.ReleaseWriter(qw422016)
//line spec.qtpl:56
}

//line spec.qtpl:56
func Spec(specID, url string) string {
	//line spec.qtpl:56
	qb422016 := qt422016.AcquireByteBuffer()
	//line spec.qtpl:56
	WriteSpec(qb422016, specID, url)
	//line spec.qtpl:56
	qs422016 := string(qb422016.B)
	//line spec.qtpl:56
	qt422016.ReleaseByteBuffer(qb422016)
	//line spec.qtpl:56
	return qs422016
//line spec.qtpl:56
}
